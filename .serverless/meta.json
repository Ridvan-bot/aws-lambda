{
  "C:\\Users\\robin\\Documents\\Foretaget\\pp-projects\\aws-lambda": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "aws-lambda-nodejs",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "eu-north-1",
              "environment": {
                "USERS_TABLE": "UsersTable"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:eu-north-1:867344453761:table/UsersTable"
                  ]
                }
              ],
              "stage": "dev",
              "versionFunctions": true
            },
            "functions": [
              {
                "createUser": {
                  "handler": "src/handler.createUser",
                  "events": [
                    {
                      "http": {
                        "path": "user",
                        "method": "post"
                      }
                    }
                  ]
                }
              },
              {
                "getUser": {
                  "handler": "src/handler.getUser",
                  "events": [
                    {
                      "http": {
                        "path": "user/{userId}",
                        "method": "get"
                      }
                    }
                  ]
                }
              },
              {
                "getUsers": {
                  "handler": "src/handler.getUsers",
                  "events": [
                    {
                      "http": {
                        "path": "users",
                        "method": "get"
                      }
                    }
                  ]
                }
              },
              {
                "deleteUser": {
                  "handler": "src/handler.deleteUser",
                  "events": [
                    {
                      "http": {
                        "path": "user/{userId}",
                        "method": "delete"
                      }
                    }
                  ]
                }
              },
              {
                "loginUser": {
                  "handler": "src/handler.login",
                  "events": [
                    {
                      "http": {
                        "path": "login",
                        "method": "post"
                      }
                    }
                  ]
                }
              }
            ],
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "UsersTable",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "UserID",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "UserID",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              }
            },
            "plugins": [
              "serverless-offline",
              "serverless-plugin-split-stacks"
            ]
          },
          "configFileDirPath": "C:\\Users\\robin\\Documents\\Foretaget\\pp-projects\\aws-lambda",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:file",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "aws-lambda-nodejs",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "eu-north-1",
              "environment": {
                "USERS_TABLE": "UsersTable"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:eu-north-1:867344453761:table/UsersTable"
                  ]
                }
              ],
              "stage": "dev",
              "versionFunctions": true
            },
            "functions": [
              {
                "createUser": {
                  "handler": "src/handler.createUser",
                  "events": [
                    {
                      "http": {
                        "path": "user",
                        "method": "post"
                      }
                    }
                  ]
                }
              },
              {
                "getUser": {
                  "handler": "src/handler.getUser",
                  "events": [
                    {
                      "http": {
                        "path": "user/{userId}",
                        "method": "get"
                      }
                    }
                  ]
                }
              },
              {
                "getUsers": {
                  "handler": "src/handler.getUsers",
                  "events": [
                    {
                      "http": {
                        "path": "users",
                        "method": "get"
                      }
                    }
                  ]
                }
              },
              {
                "deleteUser": {
                  "handler": "src/handler.deleteUser",
                  "events": [
                    {
                      "http": {
                        "path": "user/{userId}",
                        "method": "delete"
                      }
                    }
                  ]
                }
              },
              {
                "loginUser": {
                  "handler": "src/handler.login",
                  "events": [
                    {
                      "http": {
                        "path": "login",
                        "method": "post"
                      }
                    }
                  ]
                }
              }
            ],
            "resources": {
              "Resources": {
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "UsersTable",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "UserID",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "UserID",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              }
            },
            "plugins": [
              "serverless-offline",
              "serverless-plugin-split-stacks"
            ]
          },
          "configFileDirPath": "C:\\Users\\robin\\Documents\\Foretaget\\pp-projects\\aws-lambda",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\robin\\Documents\\Foretaget\\pp-projects\\aws-lambda",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "aws-lambda-nodejs",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-north-1",
        "environment": {
          "USERS_TABLE": "UsersTable"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Scan",
              "dynamodb:GetItem",
              "dynamodb:Query"
            ],
            "Resource": [
              "arn:aws:dynamodb:eu-north-1:867344453761:table/UsersTable"
            ]
          }
        ],
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": [
        {
          "createUser": {
            "handler": "src/handler.createUser",
            "events": [
              {
                "http": {
                  "path": "user",
                  "method": "post"
                }
              }
            ]
          }
        },
        {
          "getUser": {
            "handler": "src/handler.getUser",
            "events": [
              {
                "http": {
                  "path": "user/{userId}",
                  "method": "get"
                }
              }
            ]
          }
        },
        {
          "getUsers": {
            "handler": "src/handler.getUsers",
            "events": [
              {
                "http": {
                  "path": "users",
                  "method": "get"
                }
              }
            ]
          }
        },
        {
          "deleteUser": {
            "handler": "src/handler.deleteUser",
            "events": [
              {
                "http": {
                  "path": "user/{userId}",
                  "method": "delete"
                }
              }
            ]
          }
        },
        {
          "loginUser": {
            "handler": "src/handler.login",
            "events": [
              {
                "http": {
                  "path": "login",
                  "method": "post"
                }
              }
            ]
          }
        }
      ],
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "UsersTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "UserID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "UserID",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        }
      },
      "plugins": [
        "serverless-offline",
        "serverless-plugin-split-stacks"
      ]
    },
    "serviceRawFile": "\r\nservice: aws-lambda-nodejs\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: eu-north-1\r\n  environment:\r\n    USERS_TABLE: UsersTable\r\n\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:Query\r\n      Resource:\r\n        - arn:aws:dynamodb:eu-north-1:867344453761:table/UsersTable\r\n\r\nfunctions:\r\n  - ${file(functions/createUser.yml)}\r\n  - ${file(functions/getUser.yml)}\r\n  - ${file(functions/getUsers.yml)}\r\n  - ${file(functions/deleteUser.yml)}\r\n  - ${file(functions/loginUser.yml)}\r\n\r\nresources:\r\n  Resources:\r\n    ${file(resources/usersTable.yml)}\r\n\r\nplugins:\r\n  - serverless-offline\r\n  - serverless-plugin-split-stacks",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "Serverless plugin \"serverless-plugin-split-stacks\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.",
      "stack": "ServerlessError2: Serverless plugin \"serverless-plugin-split-stacks\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.\n    at PluginManager.resolveServicePlugins (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:925:2671)\n    at async PluginManager.loadAllPlugins (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:925:1293)\n    at async Serverless.init (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:932:9985)\n    at async runFramework (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:980:1336)\n    at async route (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:14772)\n    at async Object.run2 [as run] (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:15173)\n    at async run3 (file:///C:/Users/robin/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:16435)",
      "code": "PLUGIN_NOT_FOUND"
    },
    "params": {},
    "machineId": "b7284f1a72f489c6a884b8c92ccc722d",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "e6b458e7-8538-40c8-92ca-9ca0279289ec",
    "orgName": "pohlmanprotean",
    "userId": "p8NpZvGKj3R9bvSF8p",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "pohlmanprotean",
    "subscription": null,
    "userEmail": "robin.pohlman@gmail.com",
    "serviceProviderAwsRegion": "eu-north-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "867344453761",
    "projectType": "traditional",
    "versionSf": "4.4.18",
    "serviceUniqueId": "arn:aws:cloudformation:eu-north-1:867344453761:stack/aws-lambda-nodejs-dev/ed622640-c8d0-11ef-8029-0af538f24e89",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:867344453761:stack/aws-lambda-nodejs-dev/ed622640-c8d0-11ef-8029-0af538f24e89",
    "serviceProviderAwsCfStackCreated": "2025-01-02T06:15:13.763Z",
    "serviceProviderAwsCfStackUpdated": "2025-01-03T06:45:06.419Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "DeleteUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:867344453761:function:aws-lambda-nodejs-dev-deleteUser:29",
        "Description": "Current Lambda function version",
        "ExportName": "sls-aws-lambda-nodejs-dev-DeleteUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetUsersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:867344453761:function:aws-lambda-nodejs-dev-getUsers:29",
        "Description": "Current Lambda function version",
        "ExportName": "sls-aws-lambda-nodejs-dev-GetUsersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:867344453761:function:aws-lambda-nodejs-dev-loginUser:10",
        "Description": "Current Lambda function version",
        "ExportName": "sls-aws-lambda-nodejs-dev-LoginUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:867344453761:function:aws-lambda-nodejs-dev-createUser:29",
        "Description": "Current Lambda function version",
        "ExportName": "sls-aws-lambda-nodejs-dev-CreateUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:867344453761:function:aws-lambda-nodejs-dev-getUser:29",
        "Description": "Current Lambda function version",
        "ExportName": "sls-aws-lambda-nodejs-dev-GetUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://tzlq6jpsdh.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-aws-lambda-nodejs-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-a1ddd888-80f1",
        "ExportName": "sls-aws-lambda-nodejs-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}