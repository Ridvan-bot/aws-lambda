{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var handler_exports={};__export(handler_exports,{createUser:()=>createUser,deleteUser:()=>deleteUser,getUser:()=>getUser,getUsers:()=>getUsers,login:()=>login});module.exports=__toCommonJS(handler_exports);var import_client_dynamodb=require(\"@aws-sdk/client-dynamodb\");var import_jsonwebtoken=__toESM(require(\"jsonwebtoken\"));const client=new import_client_dynamodb.DynamoDBClient({region:\"eu-north-1\"});const tableName=process.env.USERS_TABLE||\"\";const SECRET_KEY=process.env.SECRET_KEY;const login=__name(async event=>{const body=JSON.parse(event.body||\"{}\");const{username,password}=body;if(username===\"testuser\"&&password===\"password123\"){const token=import_jsonwebtoken.default.sign({username},SECRET_KEY,{expiresIn:\"1h\"});return{statusCode:200,body:JSON.stringify({token})}}else{return{statusCode:401,body:JSON.stringify({message:\"Invalid credentials\"})}}},\"login\");const createUser=__name(async event=>{const body=JSON.parse(event.body||\"{}\");const params={TableName:tableName,Item:{UserID:{S:body.userId},Name:{S:body.name},Email:{S:body.email},Password:{S:body.password}}};try{const command=new import_client_dynamodb.PutItemCommand(params);await client.send(command);return{statusCode:201,body:JSON.stringify({message:\"User created\"})}}catch(err){return{statusCode:500,body:JSON.stringify({message:\"Error creating user\",error:err})}}},\"createUser\");const getUser=__name(async event=>{const userId=event.pathParameters?.userId||\"\";const params={TableName:tableName,Key:{UserID:{S:userId}}};try{const command=new import_client_dynamodb.GetItemCommand(params);const result=await client.send(command);return{statusCode:200,body:JSON.stringify(result.Item)}}catch(err){return{statusCode:500,body:JSON.stringify({message:\"Error fetching user\",error:err})}}},\"getUser\");const getUsers=__name(async event=>{const params={TableName:tableName};try{const command=new import_client_dynamodb.ScanCommand(params);const result=await client.send(command);return{statusCode:200,body:JSON.stringify(result.Items)}}catch(err){return{statusCode:500,body:JSON.stringify({message:\"Error fetching users\",error:err})}}},\"getUsers\");const deleteUser=__name(async event=>{const userId=event.pathParameters?.userId||\"\";const params={TableName:tableName,Key:{UserID:{S:userId}}};try{const command=new import_client_dynamodb.DeleteItemCommand(params);await client.send(command);return{statusCode:200,body:JSON.stringify({message:\"User deleted\"})}}catch(err){return{statusCode:500,body:JSON.stringify({message:\"Error deleting user\",error:err})}}},\"deleteUser\");0&&(module.exports={createUser,deleteUser,getUser,getUsers,login});\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["jwt"],"ignoreList":[],"sources":["C:\\Users\\robin\\Documents\\Foretaget\\pp-projects\\aws-lambda\\src\\handler.ts"],"sourcesContent":[null]}}